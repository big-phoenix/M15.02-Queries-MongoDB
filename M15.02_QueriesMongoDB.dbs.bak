<?xml version="1.0" encoding="UTF-8" ?>
<project name="MongoDb" id="Project_a91" database="MongoDb" >
	<schema name="restaurants" >
		<table name="restaurants" >
			<column name="_id" type="oid" length="800" decimal="0" jt="-8" mandatory="y" />
			<column name="address" type="object" length="800" decimal="0" jt="4999544" mandatory="y" >
				<column name="building" type="string" length="800" decimal="0" jt="12" mandatory="y" />
				<column name="coord" type="array" length="800" decimal="0" jt="4999545" mandatory="y" />
				<column name="street" type="string" length="800" decimal="0" jt="12" mandatory="y" />
				<column name="zipcode" type="string" length="800" decimal="0" jt="12" mandatory="y" />
			</column>
			<column name="borough" type="string" length="800" decimal="0" jt="12" mandatory="y" />
			<column name="cuisine" type="string" length="800" decimal="0" jt="12" mandatory="y" />
			<column name="grades" type="array[object]" length="800" decimal="0" jt="4999545" mandatory="y" >
				<column name="date" type="date" length="800" decimal="0" jt="91" mandatory="y" />
				<column name="grade" type="string" length="800" decimal="0" jt="12" mandatory="y" />
				<column name="score" type="integer" length="800" decimal="0" jt="4" mandatory="y" />
			</column>
			<column name="name" type="string" length="800" decimal="0" jt="12" mandatory="y" />
			<column name="restaurant_id" type="string" length="800" decimal="0" jt="12" mandatory="y" />
			<index name="_id_" unique="PRIMARY_KEY" >
				<column name="_id" />
			</index>
		</table>
	</schema>
	<connector name="MongoDb" database="MongoDb" driver_class="com.dbschema.MongoJdbcDriver" driver_jar="mongojdbc3.1.jar" driver_desc="No Authentication" host="localhost" port="27017" instance="restaurants" user="admin" />
	<layout name="Layout with Tools" id="Layout_353" show_column_type="y" show_relation="name" >
		<entity schema="restaurants" name="restaurants" column="address" color="3986C1" x="272" y="48" />
		<entity schema="restaurants" name="restaurants" column="grades" color="3986C1" x="256" y="192" />
		<entity schema="restaurants" name="restaurants" color="3986C1" x="48" y="80" />
		<script name="Sample Query Editor" id="Editor_144b" language="SQL" >
			<string><![CDATA[/*1.1. Escriu una consulta per mostrar tots els documents en la col.lecció Restaurants*/

/*Resultado = 3772 documentos*/ 


/*db.restaurants.find();


/*1.2. Escriu una consulta per mostrar el restaurant_id, name, borough i cuisine per tots els 

documents en la col.lecció Restaurants*/

/*El _id y el restaurant_id no son lo mismo. El _id no está especificado pero lo incluye igual.

/*Resultado = 3772 documentos*/ 


/*db.restaurants.find({restaurant_id:{$exists:true}},{address: 0, grades: 0});



/*1.3. Escriu una consulta per mostrar el restaurant_id, name, borough i cuisine, però excloure 

el camp _id per tots els documents en la col.lecció Restaurants*/

/*Resultado = 3772 documentos*/ 


/*db.restaurants.find({restaurant_id:{$exists:true}},{address: 0, grades: 0, _id: 0});


/*1.4. Escriu una consulta per mostrar restaurant_id, name, borough i zip code, però excloure el camp

 _id per tots els documents en la col.lecció Restaurants*/

/*El campo zipcode está anidado dentro del campo address y cambia la sintaxis.*/

/*Resultado 3772 documentos)*/


/*db.restaurants.find({},{"address.zipcode":1,restaurant_id:1,name:1,borough:1,_id:false});

/*1.5. Escriu una consulta per mostrar tot els restaurants que estan en el Bronx*/

/*Resultado 309 documentos)*/


/*db.restaurants.find({borough:"Bronx"});


/*1.6. Escriu una consulta per mostrar els primers 5 restaurants que estan en el Bronx*/

/*Resultado los primeros 5 documentos)*/


/*db.restaurants.find({borough:"Bronx"}).limit(5)


/*1.7. Escriu una consulta per mostrar el pròxim 5 restaurants després de saltar els primers 5 del Bronx*/

/*Resultado los siguientes 5 documentos)*/


/*db.restaurants.find({borough:"Bronx"}).skip(5).limit(5)


/*1.8. Escriu una consulta per trobar els restaurants que tenen un score de m s de 90*/

/*Resultado 3 documentos)*/

/*db.restaurants.find({grades:{$elemMatch:{score:{$gt:90}}}});



/*1.9. Escriu una consulta per trobar els restaurants que tenen un score de més que 80 però menys que 100*/

/*Resultado 4 documentos)*/


/*db.restaurants.find({$and:[{grades:{$elemMatch:{score:{$gt:80}}}},{grades:{$elemMatch:{score:{$lt:100}}}}]});



/*1.10. Escriu una consulta per trobar els restaurants quins localitzen en valor de latitud menys que -95.754168*/

/*Resultado 3 documentos)*/


/*db.restaurants.find({"address.coord.0":{"$lt":-95.754168}})


/*1.11. Escriu una consulta de MongoDB per a trobar els restaurants que no preparen cap cuisine de 'American' i 

el seu puntaje de qualificació superior a 70 i latitud inferior a -65.754168*/

/*La palabra "American" tiene un espacio detrás y la búsqueda hay que hacerla por "American "

/*Resultado 5 documentos)*/

/*db.restaurants.find({$and:[{"address.coord.0":{"$lt":-65.754168}},{grades:{$elemMatch:{score:{$gte:70}}}},{cuisine:"American "}]});*/


/*1.12. Escriu una consulta per trobar els restaurants quins no preparen cap cuisine de 'American' i va 

aconseguir un marcador més que 70 i localitzat en la longitud menys que -65.754168. 

Nota : Fes aquesta consulta sense utilitzar $and operador*/

/*Resultado 5 documentos)*/

/*db.restaurants.find({$and:[{"address.coord.1":{"$gt":-65.754168}},{grades:{$elemMatch:{score:{$gte:70}}}},{cuisine:{$ne:"American "}}]});*/





/*2.1. Escriu una consulta per trobar els restaurants quins no preparen cap cuisine de 'American ' i 

va aconseguir un punt de grau 'A' no pertany a Brooklyn. S'ha de mostrar el document segons la cuisine en ordre descendent*/

/*Resultado 2017 documentos*/


/*db.restaurants.find({cuisine:{$ne:'American '},borough:{$ne:'Brooklyn'},grades:{$elemMatch:{grade:"A"}}}).sort({cuisine:-1});


/*2.2. Escriu una consulta per trobar el restaurant_id, name, borough i cuisine per a aquells restaurants 

quin contenir 'Wil' com les tres primeres lletres en el seu nom*/

/*Resultado 3 documentos*/


/*db.restaurants.find( { name: {"$regex": "^Wil"}}, { restaurant_id:1, name:1, borough:1, cuisine: 1, _id:0 } );


/*2.3. Escriu una consulta per trobar el restaurant_id, name, borough i cuisine per a aquells 

restaurants quin contenir 'ces' com les últimes tres lletres en el seu nom*/

/*Resultado 6 documentos*/


/*db.restaurants.find( { name: {"$regex": "ces$"}}, {restaurant_id:1, name:1, borough:1, cuisine:1, _id:0});


/*2.4. Escriu una consulta per trobar el restaurant_id, name, borough i cuisine per a aquells restaurants quin 

contenir 'Reg' com tres lletres en algun lloc en el seu nom*/

/*Resultado 7 documentos*/


/*db.restaurants.find( { name: {"$regex": "Reg.*"}}, {restaurant_id:1, name:1, borough:1, cuisine:1, _id:0});


/*2.5. Escriu una consulta per trobar els restaurants quins pertanyen al Bronx i va preparar qualsevol plat 

American o xinés. "American " va con un espacio al final*/

/*Resultado 91 documentos*/

/*db.restaurants.find({$and:[{borough:"Bronx"},{$or:[{cuisine:"American "},{cuisine:"Chinese"}]}]});


/*2.6. Escriu una consulta per trobar el restaurant_id, name, borough i cuisine per a aquells restaurants 

que pertanyen a Staten Island o Queens o Bronx or Brooklyn*/

/*Resultado 1889 docuemntos*/


/*db.restaurants.find({$or:[{borough:"Queens"},{borough:"Bronx"},{borough:"Brooklyn"},{borough:"Staten Island"}]}, {restaurant_id:1, name:1, borough:1, cuisine:1, _id:0});


/*2.7. Escriu una consulta per trobar el restaurant_id, name, borough i cuisine per a aquells restaurants 

que no pertanyen a Staten Island o Queens o Bronx or Brooklyn*/

/*Resultado 1883 documentos*/


/*db.restaurants.find({$and:[{borough:{$ne:"Staten Island"}},{borough:{$ne:"Bronx"}},{borough:{$ne:"Queens"}},{borough:{$ne:"Brooklyn"}}]}, {restaurant_id:1, name:1, borough:1, cuisine:1, _id:0});



/*2.8. Escriu una consulta per trobar el restaurant_id, name, borough i cuisine per a aquells restaurants 

que aconsegueixin un marcador quin no és més que 10*/

/*Resultado 3529 documentos */ 

/*db.restaurants.find({grades:{$elemMatch:{score:{$lte:10}}}}, {restaurant_id:1, name:1, borough:1, cuisine:1, _id:0});


/*2.9. Escriu una consulta per trobar el restaurant_id, name, borough i cuisine per a aquells restaurants que 

preparen peix excepte 'American ' i 'Chinese' o el name del restaurant comença amb lletres 'Wil'*/

/*Resultado 2402 documentos */ 


/*db.restaurants.find({$or:[{ name: {"$regex": "^Wil"}},{$and:[{cuisine:{$ne:"American "}},{cuisine:{$ne:"Chinese"}}]}]}, {restaurant_id:1, name:1, borough:1, cuisine:1, _id:0});




/*2.10. Escriu una consulta per trobar el restaurant_id, name, i grades per a aquells restaurants que aconsegueixin 

un grau "A" i un score 11 en dades d'estudi ISODate "2014-08-11T00:00:00Z"*/

/*Resultado 0 documentos */ 

/*db.restaurants.find( { grades: { $elemMatch: { grade:'A', score: 11, date: ISODate ("2014-08-11T00:00:00Z")}}}, { restaurant_id: 1, name: 1, grades: 1, _id: 0})*/



/*3.1. Escriu una consulta per trobar el restaurant_id, name i grades per a aquells restaurants on el 2n element 

de varietat de graus conté un grau de "A" i marcador 9 sobre un ISODate "2014-08-11T00:00:00Z"*/

/*Resultado 0 documentos*/

/*db.restaurants.find( { 'grades.1': { $elemMatch: { grade:'A', score: 9, date: ISODate ("2014-08-11T00:00:00Z")}}}, { restaurant_id: 1, name: 1, grades: 1, _id: 0 })


/*3.2. Escriu una consulta per trobar el restaurant_id, name, adre a i ubicaci  geogr fica per a aquells restaurants 

on el segon element del array coord cont  un valor quin  s m s que 42 i fins a 52*/

/*Resultado 7 documentos*/

/*db.restaurants.find({"address.coord.1":{"$gt":42,"$lt":52}},{ restaurant_id: 1, name: 1, address: 1, _id: 0 })


/*3.3. Escriu una consulta per organitzar el nom dels restaurants en ordre ascendent juntament amb totes les columnes*/

/*Resultado 3772 documentos*/


/*db.restaurants.find().sort({name:1});


/*3.4. Escriu una consulta per organitzar el nom dels restaurants en descendir juntament amb totes les columnes*/

/*Resultado 3772 docuemntos. El primero (DESC) es Zum Stammtisch*/

/*db.restaurants.find().sort({name:-1});


/*3.5. Escriu una consulta a organitzar el nom de la cuisine en ordre ascendent i per el mateix barri de cuisine. 

Ordre descendint*/

/*Resultado 3772 documentos*/ 

/*db.restaurants.find().sort({cuisine:1,borough:-1});



/*3.6. Escriu una consulta per saber tant si totes les direccions contenen el carrer o no*/

/*Resultado 0 documentos*/ 


/*db.restaurants.find({},{"address.street":1});


/*3.7. Escriu una consulta quin seleccionarà tots el documents en la col.lecció de restaurants on el valor del camp coord és 

Double*/

/*Resultado 3772 documentos*/ 


/*db.restaurants.find({},{ "address.coord":1 });


/*3.8. Escriu una consulta quin seleccionarà el restaurant_id, name i grade per a aquells restaurants quins retorns 0 com a 

resta després de dividir el marcador per 7*/

/*Resultado 1585 documentos*/ 



/*3.9. Escriu una consulta per trobar el name de restaurant, borough, longitud i altitud i cuisine per a aquells restaurants 

que contenen 'mon' com tres lletres en algun lloc del seu name*/

/*Resultado 32 o 21 documentos si no se consideran mayusculas*/ 


/*db.restaurants.find( { name: {"$regex": "mon.*"}}, {name:1, borough:1, cuisine:1, "address.coord":1 , _id:0});




/*3.10. Escriu una consulta per trobar el name de restaurant, borough, longitud i latitud i cuisine per a aquells restaurants 

que conteinen 'Mad' com primeres tres lletres del seu name*/

/*Resultado 8 documentos*/ 

/*db.restaurants.find( { name: {"$regex": "^Mad"}}, {name:1, borough:1, cuisine:1, "address.coord":1 , _id:0});*/]]></string>
		</script>
		<browser id="Browse_ade" name="Sample Relational Data Explorer" confirm_updates="y" >
			<browse_table schema="restaurants" entity="restaurants" x="20" y="20" width="400" height="300" record_view="y" />
		</browser>
		<query id="Query_ee8" name="Sample Query Builder" >
			<query_table schema="restaurants" name="restaurants" alias="restaurants" x="48" y="48" >
				<column name="_id" />
				<column name="address" />
				<column name="borough" />
				<column name="cuisine" />
				<column name="grades" />
				<column name="name" />
				<column name="restaurant_id" />
			</query_table>
		</query>
	</layout>
	<layout name="Main Layout" id="Layout_1928" show_column_type="y" show_relation="name" >
		<entity schema="restaurants" name="restaurants" column="address" color="BED3F4" x="240" y="176" />
		<entity schema="restaurants" name="restaurants" column="grades" color="BED3F4" x="240" y="304" />
		<entity schema="restaurants" name="restaurants" color="BED3F4" x="48" y="176" />
		<callout x="48" y="80" pointer="Round" >
			<comment><![CDATA[Double-click collection headers or fields to edit.
Create multiple layouts (diagrams) with the same or different collections. 
Saving the model to file will also save the layouts.]]></comment>
		</callout>
		<group name="Collection &#039;restaurants&#039;" color="ECF0F7" >
			<entity schema="restaurants" name="restaurants" />
			<entity schema="restaurants" name="restaurants" column="address" />
			<entity schema="restaurants" name="restaurants" column="grades" />
		</group>
	</layout>
</project>